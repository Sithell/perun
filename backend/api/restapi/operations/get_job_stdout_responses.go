// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sithell/perun/backend/api/models"
)

// GetJobStdoutOKCode is the HTTP code returned for type GetJobStdoutOK
const GetJobStdoutOKCode int = 200

/*
GetJobStdoutOK Successfully fetched job stdout

swagger:response getJobStdoutOK
*/
type GetJobStdoutOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetJobStdoutOK creates GetJobStdoutOK with default headers values
func NewGetJobStdoutOK() *GetJobStdoutOK {

	return &GetJobStdoutOK{}
}

// WithPayload adds the payload to the get job stdout o k response
func (o *GetJobStdoutOK) WithPayload(payload string) *GetJobStdoutOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job stdout o k response
func (o *GetJobStdoutOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobStdoutOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetJobStdoutNotFoundCode is the HTTP code returned for type GetJobStdoutNotFound
const GetJobStdoutNotFoundCode int = 404

/*
GetJobStdoutNotFound Job not found

swagger:response getJobStdoutNotFound
*/
type GetJobStdoutNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetJobStdoutNotFound creates GetJobStdoutNotFound with default headers values
func NewGetJobStdoutNotFound() *GetJobStdoutNotFound {

	return &GetJobStdoutNotFound{}
}

// WithPayload adds the payload to the get job stdout not found response
func (o *GetJobStdoutNotFound) WithPayload(payload *models.Error) *GetJobStdoutNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job stdout not found response
func (o *GetJobStdoutNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobStdoutNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
