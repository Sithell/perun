swagger: '2.0'
info:
  title: Perun API
  description: Public Perun API for users
  version: 1.0.0
basePath: /v1
schemes:
  - http
paths:
  /jobs:
    post:
      summary: Run a new job
      description: Registers a new job and returns its id
      operationId: CreateJob
      parameters:
        - name: job
          in: body
          required: true
          schema:
            $ref: '#/definitions/Job'
      responses:
        200:
          description: Job successfully registered
          schema:
            $ref: '#/definitions/Job'
    get:
      summary: Get all jobs
      description: Returns a list of all jobs
      operationId: ListJobs
      responses:
        200:
          description: Successfully fetched jobs
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'

  /jobs/{id}:
    get:
      summary: Get a job by id
      description: Returns a job with corresponding id
      operationId: GetJobByID
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: Successfully fetched job
          schema:
            $ref: '#/definitions/Job'
        404:
          description: Job not found
          schema:
            $ref: '#/definitions/Error'

  /jobs/{id}/stdout:
    get:
      summary: Get stdout of a job
      description: Returns stdout of a job as plain text
      operationId: GetJobStdout
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      produces:
        - text/plain
        - application/json
      responses:
        200:
          description: Successfully fetched job stdout
          schema:
            type: string
        404:
          description: Job not found
          schema:
            $ref: '#/definitions/Error'

definitions:
  Job:
    type: object
    properties:
      id:
        type: integer
      image:
        type: string
        description: Docker image and tag to start container with
      command:
        type: string
        description: Command to run inside of docker container
      status:
        type: string
        description: Job execution status
        enum:
          - created
          - assigned
          - running
          - completed
          - failed
    required:
      - image

  Error:
    type: object
    properties:
      message:
        type: string
        description: Detailed error message
