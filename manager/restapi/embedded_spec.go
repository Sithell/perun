// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Universal Perun API for clients and providers",
    "title": "Perun API",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/provider/register": {
      "post": {
        "description": "Register a provider if it is reachable via gRPC at provided host and port",
        "summary": "Register a new provider",
        "operationId": "RegisterProvider",
        "parameters": [
          {
            "description": "Provider's gRPC server's host and port",
            "name": "host",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Provider successfully registered"
          },
          "403": {
            "description": "Failed to confirm provider reachability"
          }
        }
      }
    }
  },
  "definitions": {
    "Host": {
      "type": "object",
      "required": [
        "host"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "default": 9002
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Universal Perun API for clients and providers",
    "title": "Perun API",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/provider/register": {
      "post": {
        "description": "Register a provider if it is reachable via gRPC at provided host and port",
        "summary": "Register a new provider",
        "operationId": "RegisterProvider",
        "parameters": [
          {
            "description": "Provider's gRPC server's host and port",
            "name": "host",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Provider successfully registered"
          },
          "403": {
            "description": "Failed to confirm provider reachability"
          }
        }
      }
    }
  },
  "definitions": {
    "Host": {
      "type": "object",
      "required": [
        "host"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "default": 9002
        }
      }
    }
  }
}`))
}
